<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>maGaming RSS Feed - theverge_com</title>
        <link>https://lukasz-gladek-av.github.io/custom-rss/theverge_com.xml</link>
        <description>A cleaned-up version of the original gaming feed for theverge_com</description>
        <lastBuildDate>Thu, 26 Jun 2025 08:11:56 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[The Nintendo Switch 2 webcam compatibility mystery is solved and updates are on the way]]></title>
            <link>https://www.theverge.com/report/693182/nintendo-switch-2-webcam-mystery-1080p-480p-uvc-iso-bulk-ugreen-elgato</link>
            <guid>https://www.resetera.com/threads/the-nintendo-switch-2-webcam-compatibility-mystery-is-solved-and-updates-are-on-the-way.1228566/</guid>
            <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div id="zephr-anchor"><p>If you plug the world’s best-reviewed webcams into the Nintendo Switch 2 today, <a href="https://www.theverge.com/nintendo/682008/which-webcams-work-with-nintendo-switch-2">they won’t work, while many comparatively ancient webcams do</a>. Why? That’s been a mystery for the nearly three weeks since the handheld launched. Now, two companies say they’ve figured it out and are pledging to update the firmware on their cameras.</p><p>Here’s a possibly oversimplified answer: today’s more powerful webcams advertise many different modes that they support to any device you connect via USB — but <em>that’s a problem</em> because the Nintendo Switch 2 appears to be choosing modes it can’t properly play.</p><p>In the case of Elgato, which will update its non-working Facecam MK.2 and Facecam Neo, the solve was adding an additional low-resolution 480p mode, <a href="https://x.com/JFest/status/1937966174429712886">with Elgato general manager Julian Fest speculating</a> that the Switch can only reliably support “very low resolution” cameras in order to put <a href="https://www.youtube.com/watch?v=0TZZ1akN8V8">multiple facecams on screen</a>.</p><p>But low resolution by itself isn’t the answer — as you’d probably expect, given that Nintendo’s own official Switch 2 camera is a 1080p camera that genuinely broadcasts a 1080p mode (we checked), and given it’s far from the only 1080p or higher camera that works with Nintendo’s new Switch.</p><p>Accessory company Ugreen tells <em>The Verge</em> that the technical details of making a camera work with the console are far more nuanced than resolution, or frame rate, or whether you have the enhanced bandwidth of USB 3 or the far slower USB 2.</p><p>Nor is it enough for the camera to support a single compatible UVC (USB Video Class) mode. Instead, Ugreen spokesperson Gabrielle Wang explains by email, the camera needs to <em>avoid</em> advertising modes or protocols that the Switch might not recognize, or that it might attempt to use but fail, after you plug it into the console.</p><p>Ugreen says three different conditions <em>all simultaneously </em>need to be met for a camera to work with the Switch 2:</p><div><ul><li><span>“The camera must not use the HID protocol.”</span></li><li><span>“The camera must be configured for Isochronous transfer mode.” (<a href="https://www.regami.solutions/post/isochronous-isoc-vs-bulk-choosing-right-transfer-mode-usb-cameras">As opposed to Bulk</a>, which can be more resource intensive.)</span></li><li><span>“The USB endpoint descriptors must not include unsupported low frame rate settings (below 30 fps).” More on that one in a sec.</span></li></ul></div><p>Unfortunately, you’re not likely to find any of those “specs” on a camera’s box or in its marketing materials, but but they are things you can check with a connected PC and <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/usbview">a tool like USBView</a> — and in so doing, <a href="https://docs.google.com/document/d/1ZXg6qfvBkS5nhfzY6-ABoEp1RraYqh6s2VvPpLfByi4/edit?tab=t.8dlf1ievxdr9">we can see</a> the camera incompatibility situation is more nuanced than a single factor.</p><p>Elgato’s Facecam MK.2, for instance, already advertises isochronous modes to connected devices as far as I can tell, and it doesn’t advertise an HID interface. In fact, it appears to already offer a 480p mode as well.</p><p>But Elgato’s camera may have broken Ugreen’s third theoretical rule — it tells connected devices like the Switch 2 that it’s capable of running as low as 5 fps at a variety of different resolutions, according to the USB Device Descriptors I’ve viewed. Ugreen says that the Switch 2 may prioritize lower settings, “but if the camera hardware cannot actually output at such low frame rates, it will cause a failure.”</p><p>It wouldn’t be surprising if Ugreen had an easier time figuring this out: though none of Elgato’s webcams worked with the Switch 2 at launch, Ugreen had the benefit of discovering that some of its models did, while others did not.</p><p>Ugreen says its CM826 / 55512, CM797 / 45644, and CM825 / 75330 cameras will have updates by the end of June, while the CM678 / 15728, CM778 / 35626, CM717 / 25442, CM825 / 55721, and CM831 / 65381 already work.</p><p>But I wonder if this should solely be the responsibility of camera companies — PCs, for example, don’t generally have this same trouble picking from a webcam’s list of supported video modes. Perhaps Nintendo will address the webcam compatibility situation, globally, with an update of its own.</p><p>Nintendo didn’t have a comment for our story.</p><div><p><em><a href="https://www.theverge.com/authors/andrew-liszewski">Andrew Liszewski</a> and <a href="https://www.theverge.com/authors/andru-marino">Andru Marino</a> contributed to this story.</em></p></div></div></div><br/><br/>https://www.theverge.com/report/693182/nintendo-switch-2-webcam-mystery-1080p-480p-uvc-iso-bulk-ugreen-elgato]]></content:encoded>
        </item>
    </channel>
</rss>