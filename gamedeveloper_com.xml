<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>maGaming RSS Feed - gamedeveloper_com</title>
        <link>https://lukasz-gladek-av.github.io/custom-rss/gamedeveloper_com.xml</link>
        <description>A cleaned-up version of the original gaming feed for gamedeveloper_com</description>
        <lastBuildDate>Mon, 17 Mar 2025 11:44:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Photography Games | Game Developer Spotlight Series]]></title>
            <link>https://www.gamedeveloper.com/photography-spotlight</link>
            <guid>https://www.resetera.com/threads/photography-games-game-developer-spotlight-series.1136394/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/photography-spotlight<br/><br/><div id="readability-page-1" class="page"><div data-template="premier-page"><div data-module="content-spotlight"><article title="Photo Wk Intro" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">The Past, Present, and Future</p><a href="https://www.gamedeveloper.com/design/welcome-to-photography-week-" data-discover="true"><h2 data-testid="content-spotlight-heading">Welcome to Photography Week!</h2></a><p data-testid="content-spotlight-body">Join us from 9/16-9/20 as we examine the photography genre and explore what developers can learn and apply to their own projects.</p></div></article></div><div data-module="text-box"><h2>What can developers learn from Photography Games?</h2><div data-module="content"><p data-testid="content-paragraph"><span data-testid="content-text"><span>From 'Welcome to Photography Week' by Holly Green, Game Developer Community Editorial Coordinator</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">Photography has become one of the most popular ways we interact with video games. Through the simple act of taking a photo, photography games and photo modes implore us to notice our surroundings, document our experience, and take a moment to commit to memory the images and emotions that we felt along the way.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">To better explore those connections and mechanics, Game Developer is publishing a series of new articles digging into the topic, and highlighting some classics as well. Come along with us as we take a look at the history of photography in video games and its popular uses within the genre and preview the new interviews, essays, and deep dives publishing in the days to come.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">We’ll be highlighting reader-submitted articles throughout the week and there’s tons of great stuff to look forward to, like an essay from Beasts of Maravilla Island developer Michelle Olson about eschewing photographic critique, an interview with the developers of Texas Chainsaw Massacre on why they went with the free release of an idyllic photography minigame as a prequel to their horror title, and a poignant feature from our senior editor Bryant Francis on what basic photography tips can teach us about making better photo modes.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">We’ll also be revisiting interviews, blogs and features from Game Developer’s recent past, unearthing postmortems from games like </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/production/postmortem-sundae-month-s-pupperazzi">Pupperazzi</a></span><span data-testid="content-text"> and </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/production/postmortem-toem">TOEM</a></span><span data-testid="content-text"> as well as </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/design/how-some-indies-are-approaching-photography-mechanics-in-their-games">interviews with indie developers about how they’re using photography in video games</a></span><span data-testid="content-text">. Stay tuned for insight on how these games are put together and the features that developers find vital to the photography game experience.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">If this topic fascinates you, there’s still time to submit an article to our blog section about photography games and photo modes in video games.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Take a peek at our blog submission guidelines and FAQ, head over to our blog submission page and send us your thoughts.</span></p></div></div><div data-module="text-box"><h2>The Player Experience of Scoring (&amp; What is a "Good Photo" Anyway??)</h2><div data-module="content"><p data-testid="content-paragraph"><span data-testid="content-text"><span>From 'The eye of the beholder: Measuring player success in photography games' by Michelle Olson</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">While scoring photos as a mechanic does provide extra feedback on the player’s actions, and can create ways for content to be gated or progression to be measured, it creates a very specific mindset when one is taking photos in the game.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">To me, this type of photography feels more like client work, rather than artistic expression. Not only is there a prompt of what to take a picture of, but there are strict guidelines on how that subject should be photographed.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">While Pokemon Snap offers some variety by providing different opportunities to photograph the same subject in different environments, players aren’t able to have full freedom of composition.</span></p></div></div><div data-module="content-spotlight"><article title="Photo Wk - Blog Spotlight" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">Featured Blog</p><a href="https://www.gamedeveloper.com/design/the-eye-of-the-beholder-measuring-player-success-in-photography-games" data-discover="true"><h2 data-testid="content-spotlight-heading">The eye of the beholder: Measuring player success in photography games</h2></a><p data-testid="content-spotlight-body">An exploration on how different photography games measure player progress, and how to balance progression metrics and artistic freedom.</p></div></article></div><div data-module="text-box"><p data-testid="content-paragraph"><span data-testid="content-text">In fact, there are often ways to achieve the “best” shot - a particular photo of a particular behavior that will always be worth more points than any other photo a player takes with the same subject. While these moments are often adorable and lovely, it creates an opportunity where one very specific composition is incentivized, and disincentivizes taking other interesting photos of the same subject.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">This is a totally valid way of approaching this type of gameplay - to give a prompt, and ensure the player captures the prompt to the specifications of what the game wants to see. In essence, this “gamifies” the art of photography.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">But, I think it’s important to ask ourselves as designers of photography games - do I want this to feel like client work? Or do I want this to feel like artistic expression? Either is appropriate, so long as we are deeply intentional about it.</span></p></div><div data-module="content-spotlight"><article title="Photo Week - Manual Highlight 1" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">Sweet Snaps &amp; Expressive Edits</p><a href="https://www.gamedeveloper.com/design/alekon-lets-players-make-the-picture-perfect-photo-album" data-discover="true"><h2 data-testid="content-spotlight-heading">Alekon lets players make the picture perfect photo album</h2></a><p data-testid="content-spotlight-body">This Pokémon Snap-inspired game uses robust photo editing tools to create an expressive space for players.</p></div></article></div><div data-module="content-spotlight"><article title="Photo Wk - Spotlight 2" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">Dynamic Photos in a 2D World</p><a href="https://www.gamedeveloper.com/design/deep-dive-how-custom-tools-made-the-2d-photo-mode-of-a-highland-song-sing" data-discover="true"><h2 data-testid="content-spotlight-heading">Deep Dive: How custom tools made the 2D photo mode of A Highland Song sing</h2></a><p data-testid="content-spotlight-body">Photography isn't just for 3D games. Here's how inkle gave players a dynamic photo mode in a sidescrolling exploration game.</p></div></article></div><div data-module="content-spotlight"><article title="Photo Wk - Content Spotlight 3" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">On-Rails Creativity</p><a href="https://www.gamedeveloper.com/design/inside-the-cute-and-creepy-world-of-penko-park" data-discover="true"><h2 data-testid="content-spotlight-heading">Inside the cute and creepy world of Penko Park</h2></a><p data-testid="content-spotlight-body">The developers tell us how they curated an expressive set of creatures to photograph and why they chose on-rails over an open-world experience.</p></div></article></div><div data-module="text-box"><h2>Can you help players figure out what needs to be in the frame?</h2><div data-module="content"><p data-testid="content-paragraph"><span data-testid="content-text"><span>From 'What basic photography tips can teach us about making better photo modes' by Bryant Francis</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">Before I worked in games, I was in TV and film production. Before I was in TV and Film production, I was in film school. Before I ever shot a moving picture, I took a photography course, and before I took that photography course, my Grandfather, Larry S. Cohan, taught me how to shoot photos.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">In Fall 2009 he was published a (still-archived) story called "Better Photos—No Cost" in a Maryland magazine called Outlook by the Bay, a publication for senior citizens of the Chesapeake Bay region. It documents the basics of photography he didn't just share with me but seemed obsessed with everyone having some understanding of.</span></p></div></div><div data-module="content-spotlight"><article title="Photo Wk - Blog Spotlight 2" text-alignment="left" data-testid="content-spotlight-article"><div data-testid="content-spotlight-content-container"><p data-testid="content-spotlight-summary">From the Editors: Bryant Francis</p><a href="https://www.gamedeveloper.com/art/how-to-help-players-shoot-better-in-game-photos-for-no-cost" data-discover="true"><h2 data-testid="content-spotlight-heading">What basic photography tips can teach us about making better photo modes</h2></a><p data-testid="content-spotlight-body">Advice for 'mature Marylanders' can be good for players too.</p></div></article></div><div data-module="text-box"><p data-testid="content-paragraph"><span data-testid="content-text">Some of his grumpiness still drips off the page. "Don't bore your friends with photos that would bore you if they weren't your own," he wrote. "If you're shooting the sunrise over Bar Harbor, Maine, don't try to include your half-asleep spouse." Sarcasm was a second language for Grandpa, but I remember he seemed sincerely frustrated at how his peers didn't understand the basics of photography, equaled only by his frustration of how they were intimidated by computers.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">For Photography Week, I revisited his guide and thought about how he was trying to teach fellow retirees better ways to take shots. They're good tips—ones I still think about when having fun in a photo mode like the ones in Pacific Drive, Star Wars Jedi: Survivor, or Marvel's Spider-Man 2.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">They're so good, in fact, that they could help you make a better photo mode for your next game.</span></p></div><div data-module="content-cards"><p data-testid="content-cards-header"><h3 data-testid="contentCardsTitle">From the Archives: Photography Game Classics</h3></p></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Road to the IGF 2024 with Joel Couture: Game Developer Podcast ep. 41]]></title>
            <link>https://www.gamedeveloper.com/design/road-to-the-igf-2024-with-joel-couture-game-developer-podcast-ep-41</link>
            <guid>https://www.resetera.com/threads/road-to-the-igf-2024-with-joel-couture-game-developer-podcast-ep-41.1136385/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/design/road-to-the-igf-2024-with-joel-couture-game-developer-podcast-ep-41<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">With GDC 2024 and the Independent Games Festival less than a week away, editor in chief Danielle Riendeau sits down with veteran indie beat journalist Joel Couture for episode 41 of the Game Developer Podcast. Each year, Joel painstakingly assembles our </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/keyword/road-to-the-igf">Road to the IGF series, which showcases the methods and philosophies of various IGF finalists through a series of in-depth interviews.</a></span></p><p data-testid="content-paragraph"><span data-testid="content-text"><span>Music by Mike Meehan. Produced by Jordan Mallory.</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">In addition to the games that really stuck out this year – including (but not limited to) </span><span data-testid="content-text"><span>Kevin(1997-2077)</span></span><span data-testid="content-text">, </span><span data-testid="content-text"><span>goodbye.monster</span></span><span data-testid="content-text">, </span><span data-testid="content-text"><span>Isles of Sea and Sky</span></span><span data-testid="content-text">, </span><span data-testid="content-text"><span>Anthology of the Killer</span></span><span data-testid="content-text">, </span><span data-testid="content-text"><span>Planetka</span></span><span data-testid="content-text"> and others—Joel also talks about his preparation process for producing a truly herculean amount of interviews in such a short amount of time.</span></p><h2 data-testid="content-text" id="Creating Tchia">Creating Tchia</h2><p data-testid="content-paragraph"><span data-testid="content-text">“They're all nominated for a very good reason, and once I figure that reason out stuff kind of starts to unravel,” Joel tells Danielle. “</span><span data-testid="content-text"><span>Tchia</span></span><span data-testid="content-text">… which takes place in New Caledonia, the devs really wanted to explore their homeland and show it off and show their culture off. The lead devs were from there, but the rest of the team wasn't, so what was it like to show off your home? What was it also like to introduce a team to your home and get them to embrace that culture and work with that culture?”</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Elsewhere, Joel speaks to the responsibility he feels to conduct his interviews in an ethical manner, but also cautions developers to remember that they are ultimately in control of their own story.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">“We can do a lot of damage to a life with some of the stuff we put out there,” he says. “Not everybody’s concerned about ‘do no harm’ and not everybody does harm on purpose. So just just take care with your story and if you want it out there, as best you can, because you're the best person to protect it.”</span></p></div><div><h2>About the Author</h2><div data-component="contributor-summary"><p data-testid="contributor-summary-subtitle">Editor-in-Chief, GameDeveloper.com</p><div><p data-testid="content-paragraph"><span data-testid="content-text">Danielle is the editor-in-chief of Game Developer, with previous editorial posts at Fanbyte, VICE, and Polygon. She’s also a lecturer in game design at the Berklee College of Music, and a hobbyist game developer in her spare time.</span></p></div></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Accessibility and fancy footwork with GLYDR's John Warren - Game Developer Podcast ep. 40]]></title>
            <link>https://www.gamedeveloper.com/marketing/accessibility-and-fancy-footwork-with-glydr-s-john-warren</link>
            <guid>https://www.resetera.com/threads/accessibility-and-fancy-footwork-with-glydrs-john-warren-game-developer-podcast-ep-40.1136379/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/marketing/accessibility-and-fancy-footwork-with-glydr-s-john-warren<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">On the latest episode of the Game Developer podcast, I had the pleasure of welcoming my former colleague John Warren on the show to talk about his work at </span><span data-testid="content-text"><a target="_blank" href="https://www.glydr.gg/">GLYDR</a></span><span data-testid="content-text">. Now finishing up a successful Kickstarter run, GLYDR is a control apparatus that people operate with their feet, leaving their hands free for other tasks (or providing options for folks who need hands-free solutions).</span></p><p data-testid="content-paragraph"><span data-testid="content-text"><span>Music by Mike Meehan. Produced by Jordan Mallory.</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text"><span>Listen now on </span></span><span data-testid="content-text"><a target="_blank" href="https://podcasts.apple.com/us/podcast/40-accessibility-and-fancy-footwork-with-glydrs/id1476405424?i=1000646222139">Apple Podcasts</a></span><span data-testid="content-text"><span>, </span></span><span data-testid="content-text"><a target="_blank" href="https://podcasts.google.com/feed/aHR0cHM6Ly9jYXN0LnJvY2tzL2hvc3RpbmcvMTk1OTMvZmVlZHMvQ1M5WlkueG1s/episode/SlVNOFlIQ0EtVTY4MEs5?sa=X&amp;ved=0CAUQkfYCahcKEwiIwMPSw86EAxUAAAAAHQAAAAAQCg">Google Podcasts</a></span><span data-testid="content-text"><span>, and </span></span><span data-testid="content-text"><a target="_blank" href="https://open.spotify.com/episode/5CH4f16WWQF5ChvCQoefAu">Spotify.</a></span></p><p data-testid="content-paragraph"><span data-testid="content-text">We talked about everything from the accessibility piece to the wide range of use cases for the controller, as well as filming a good trailer for your new device (including some light stuntwork by John's partner), finding the way to success with Kickstarter, and how to market a new controller to all types of players.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">We also chatted about the power of having something positive happen during the ongoing layoffs and turmoil in the industry.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"Everyone's spirit is, you know, kind of in a weird place right now," said Warren.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"And I think having those things to hold on to that are hopeful is definitely important. And also like, keep in mind, the person that really facilitated the creation of this device and kind of getting into this market has absolutely no games experience."</span></p><p data-component="related-article"><span data-testid="related-article-title">Related:</span><a href="https://www.gamedeveloper.com/production/making-sense-of-the-2024-state-of-the-game-industry-report" target="_self" data-discover="true">Exploring the 2024 State of the Game Industry report - Game Developer Podcast ep. 39</a></p><p data-testid="content-paragraph"><span data-testid="content-text">"I mean, this is, this is a this is a 70 plus year old man with a engineering background that came up with this idea, because he just likes innovation and new stuff and thinking about 'why why haven't we done this?' You know, asking 'why not?' And so, innovation and excitement and new things in this games industry doesn't also have to come from the same people."</span></p></div><div><h2>About the Author</h2><div data-component="contributor-summary"><p data-testid="contributor-summary-subtitle">Editor-in-Chief, GameDeveloper.com</p><div><p data-testid="content-paragraph"><span data-testid="content-text">Danielle is the editor-in-chief of Game Developer, with previous editorial posts at Fanbyte, VICE, and Polygon. She’s also a lecturer in game design at the Berklee College of Music, and a hobbyist game developer in her spare time.</span></p></div></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Phantom inspiration and the ethical auteur with Xalavier Nelson Jr.]]></title>
            <link>https://www.gamedeveloper.com/design/phantom-inspiration-and-the-ethical-auteur-with-xalavier-nelson-jr-</link>
            <guid>https://www.resetera.com/threads/phantom-inspiration-and-the-ethical-auteur-with-xalavier-nelson-jr.1136373/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/design/phantom-inspiration-and-the-ethical-auteur-with-xalavier-nelson-jr-<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">On the latest episode of the Game Developer podcast, we had a far-ranging chat with Strange Scaffold creative director Xalavier Nelson Jr. Nelson's outfit just </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/design/making-and-breaking-the-max-payne-like-rules-of-i-el-paso-elsewhere-i-">put out its largest game, El Paso, Elsewhere</a></span><span data-testid="content-text"><span>,</span></span><span data-testid="content-text"> earlier in the fall, to significant critical acclaim. We talked a great deal about the game and its many inspirations.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Nelson gave honest assessment of the game's production cycle and the team's work practices. We also discussed broader problems in game production throughout the industry, including career longevity and the simple fact that folks in creative fields need to be able to pass on information and learnings to newer ones.</span></p><p data-testid="content-paragraph"><span data-testid="content-text"><span>Music by Mike Meehan. Produced by Jordan Mallory.</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">Listen now on </span><span data-testid="content-text"><a target="_blank" href="https://podcasts.apple.com/us/podcast/game-developer-podcast/id1476405424">Apple Podcasts</a></span><span data-testid="content-text">, </span><span data-testid="content-text"><a target="_blank" href="https://podcasts.google.com/feed/aHR0cHM6Ly9jYXN0LnJvY2tzL2hvc3RpbmcvMTk1OTMvZmVlZHMvQ1M5WlkueG1s/episode/MkdKV0tETDEtN09LVFZTNA?sa=X&amp;ved=0CAUQkfYCahcKEwjoh429pvuCAxUAAAAAHQAAAAAQAQ">Google Podcasts</a></span><span data-testid="content-text">, and </span><span data-testid="content-text"><a target="_blank" href="https://open.spotify.com/show/3IjaJ0YoZiVvgOK5xRlDQx">Spotify.</a></span></p><p data-testid="content-paragraph"><span data-testid="content-text">"We don't give people enough experiences, frankly." Nelson says, when discussing developers' longevity and quality of experiences in the game industry. "Compared to any [film] director, and the amount of work they do in their first ten years, both speculative stuff as well as stuff that actually comes out, vs. what a single creative director in games tends to get to do, in the span of ten years, then you see, pretty quickly... it's immediately obvious why we don't have clearer voices producing more consistently and producing in a way that actively gathers people to care about those voices as well."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Nelson works across media on top of his Strange Scaffold duties, a writer for games and comics, as well as his latest endeavor: acting, which he shows off as the voice of </span><span data-testid="content-text"><span>El Paso, Elsewhere</span></span><span data-testid="content-text">'s protagonist.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">You can listen to the full episode embedded above for the full chat, including Nelson's advice for aspiring indie developers and leaders.</span></p></div><div><h2>About the Author</h2><div data-component="contributor-summary"><p data-testid="contributor-summary-subtitle">Editor-in-Chief, GameDeveloper.com</p><div><p data-testid="content-paragraph"><span data-testid="content-text">Danielle is the editor-in-chief of Game Developer, with previous editorial posts at Fanbyte, VICE, and Polygon. She’s also a lecturer in game design at the Berklee College of Music, and a hobbyist game developer in her spare time.</span></p></div></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Bethesda relaunches paid mod store for Skyrim: Special Edition]]></title>
            <link>https://www.gamedeveloper.com/business/bethesda-relaunches-paid-mod-store-for-skyrim-special-edition</link>
            <guid>https://www.resetera.com/threads/bethesda-relaunches-paid-mod-store-for-skyrim-special-edition.1136358/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/business/bethesda-relaunches-paid-mod-store-for-skyrim-special-edition<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">A new update for the remastered edition of&nbsp;</span><span data-testid="content-text"><span>The Elder Scrolls V:&nbsp;Skyrim </span></span><span data-testid="content-text">has come with a new storefront for paid mods for the game. Known as&nbsp;</span><span data-testid="content-text"><a target="_blank" href="https://bethesda.net/en/article/52xMsb1fD2nTiNBkiWCbxq/build-share-and-find-creations-skyrim-special-edition">Bethesda Game Studios Creations</a></span><span data-testid="content-text">, the platform has been dubbed&nbsp;"an enhanced platform for building and sharing community-made content."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Back in 2015,&nbsp;</span><span data-testid="content-text"><span>Skyrim&nbsp;</span></span><span data-testid="content-text">was one of the first games to </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/business/game-mods-can-now-be-sold-on-the-steam-workshop-for-real-money">allow mod creators</a></span><span data-testid="content-text"> to charge real money for game mods on the Steam Workshop. Those mods were&nbsp;</span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/business/valve-changes-its-mind-removes-all-paid-i-skyrim-i-mods-from-steam">later pulled</a></span><span data-testid="content-text">&nbsp;after intense criticism, though Bethesda tried again with the </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/business/the-pros-and-cons-of-bethesda-s-creation-club">Creation Club</a></span><span data-testid="content-text"> in 2017 for&nbsp;</span><span data-testid="content-text"><span>Fallout 4&nbsp;</span></span><span data-testid="content-text">and later&nbsp;</span><span data-testid="content-text"><span>Skyrim:&nbsp;Enhanced Edition</span></span><span data-testid="content-text">,&nbsp;albeit with some reservations.&nbsp;</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The BGSC builds upon the Creation Club, making it so&nbsp;Creators can apply to be a part of the Verified Program. Upon acceptance, they'll have the ability to charge for their creations and receive royalties.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Further, verified creators have fewer restrictions on releasing mods. They won't have to require a patch to release or be restricted on including voice-over; however, they can't be localized in multiple languages and must follow platform restrictions for content and storage.&nbsp;</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Not long after&nbsp;</span><span data-testid="content-text"><span>Starfield's&nbsp;</span></span><span data-testid="content-text">release, Bethesda confirmed </span><span data-testid="content-text"><a target="_self" href="https://www.gamedeveloper.com/business/-i-starfield-i-will-enlist-for-official-mod-support-in-early-2024">mod support</a></span><span data-testid="content-text"> for the game would launch early next year. More than its previous works, it was apparent with this particular game the extent to which&nbsp;</span><span data-testid="content-text"><a target="_blank" href="https://www.polygon.com/23861284/starfield-mod-community-patch-nexus-mods">mods</a></span><span data-testid="content-text">&nbsp;are used to address&nbsp;issues or bugs that Bethesda was unable to fix prior to release.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Clearly, the developer has mods on the brain, but it's unclear when (or if) it'll allow for paid mods in its newest RPG.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Bethesda's FAQ on becoming a Verified Creator can be read </span><span data-testid="content-text"><a target="_blank" href="https://creations.bethesda.net/en/creators/bethesdagamestudios">here</a></span><span data-testid="content-text">.</span></p></div><div><h2>About the Author</h2><div data-component="contributor-summary"><p data-testid="contributor-summary-subtitle">Contributing Editor, GameDeveloper.com</p><div><p data-testid="content-paragraph"><span data-testid="content-text">A Kansas City, MO native, Justin Carter has written for numerous sites including IGN, Polygon, and SyFy Wire. In addition to Game Developer, his writing can be found at io9 over on Gizmodo. Don't ask him about how much gum he's had, because the answer will be more than he's willing to admit.</span></p></div></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Tinybuild is cutting jobs after an "incredibly challenging year"]]></title>
            <link>https://www.gamedeveloper.com/business/tinybuild-is-cutting-jobs-after-an-incredibly-challenging-year-</link>
            <guid>https://www.resetera.com/threads/tinybuild-is-cutting-jobs-after-an-incredibly-challenging-year.1136352/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/business/tinybuild-is-cutting-jobs-after-an-incredibly-challenging-year-<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">Hello Neighbor publisher Tinybuild is accelerating a cost reduction plan that will result in an unknown number of layoffs.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The company </span><span data-testid="content-text"><a target="_blank" href="https://polaris.brighterir.com/public/tinybuild/news/rns/story/w0jqjnx">broke the news in a trading update</a></span><span data-testid="content-text"> and explained it has been performing "below expectations" and must therefore take "accelerated cost action to re-align investments with expected revenues."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Tinybuild added that "unusually weak trading in October" and a subpar performance in Q4 means full-year revenues will likely stumble, ranging between $40 million to $50 million. It also noted that its Versus Evil subsidiary continues to underperform and has delayed three of four upcoming titles until 2024.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"Since the publication of the Company's interim results in September 2023, the market has deteriorated further and negotiations of certain large contracts have extended into the final month of the year," reads the trading update.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"These remain under negotiation and may not be signed by year end, or at all. The continued underperformance of Versus Evil which delayed into 2024 three out of four games originally planned for release in H2 2023, including the widely anticipated </span><span data-testid="content-text"><span>Broken Roads</span></span><span data-testid="content-text">, also weighed on group performance."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">As of November 2023, Tinybuild had around $5.7 million in cash but expects that stockpile to "decline further due to limited cash inflow from October sales, one-off charges as part of the cost reduction plan and underlying software development investments due in December."</span></p><h2 data-testid="content-text" id="Tinybuild's &quot;incredibly challenging year&quot;">Tinybuild's "incredibly challenging year"</h2><p data-testid="content-paragraph"><span data-testid="content-text">Tinybuild CEO Alex Nichiporchik explained a combination of those factors has turned 2023 into an "incredibly challenging year" for the publisher, and conceded the company ultimately failed to overcome some significant hurdles.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"The whole team at Tinybuild worked tirelessly to release our best products, despite the impact of the war in Ukraine that deeply affected most of us. We couldn't overcome weak demand for video games and the sudden reversal of market dynamics that had favored us over the previous years. We innovated in marketing, refocused our catalogue, and adjusted the cost base as quickly as possible, and, despite these actions, it wasn't enough in such a rapidly evolving market," he said.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Confirming the layoffs, Nichiporchik said it's "physically painful to part ways with colleagues" who have worked tirelessly for Tinybuild, but indicated the cuts are essential if the company hopes to bounce back during a "pivotal stage."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"I am committed to do everything I can to ensure we get through this tough period. We owe it to all our stakeholders now to bounce back and deliver on what Tinybuild can achieve," he added.&nbsp;</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Looking ahead, Tinybuild said the outlook for the next fiscal year remains "cautious" due to the likelihood of "continued pressure on discounting in a crowded market for new releases."</span></p><p data-testid="content-paragraph"><span data-testid="content-text">"The planned launch of certain promising games in 2024 gives reason for optimism and this coupled with a leaner cost base could translate into strong operating leverage in the event of a recovery in video games sales," concludes the update.</span></p></div><div><h2>About the Author</h2><div data-component="contributor-summary"><p data-testid="contributor-summary-subtitle">News Editor, GameDeveloper.com</p><div><p data-testid="content-paragraph"><span data-testid="content-text">Game Developer news editor Chris Kerr is an award-winning journalist and reporter with over a decade of experience in the game industry. His byline has appeared in notable print and digital publications including Edge, Stuff, Wireframe, International Business Times, and&nbsp;</span><span data-testid="content-text"><a target="_blank" href="http://pocketgamer.biz/">PocketGamer.biz</a></span><span data-testid="content-text">. Throughout his career, Chris has covered major industry events including GDC, PAX Australia, Gamescom, Paris Games Week, and Develop Brighton. He has featured on the judging panel at The Develop Star Awards on multiple occasions and appeared on BBC Radio 5 Live to discuss breaking news.</span></p></div></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The Art to Programming Conversation]]></title>
            <link>https://www.gamedeveloper.com/design/the-art-to-programming-conversation</link>
            <guid>https://www.resetera.com/threads/the-art-to-programming-conversation.1136346/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/design/the-art-to-programming-conversation<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">The first component is the words themselves, and how you decide to have them stored. For the purposes of the game </span><span data-testid="content-text"><span>Rockin’ Racket</span></span><span data-testid="content-text">, on which I am a Programmer and part-time Artist, we used Ink. Ink is a narrative scripting language developed by Inkle Studios. I am in no way an expert on it so if you would like to learn more I suggest reading about it </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://www.inklestudios.com/ink/">here</a></span><span data-testid="content-text">.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">However, the general idea of an Ink file is to structure a text file into a conversation, with each line of text being a line of dialogue, but with the added bonus of having specific use cases for multiple different options for the next line, sections of conversations, and a variable system. Ink files also allow for dependencies, meaning developers can have an Ink file which uses variables from another through the “INCLUDE” keyword. The core of my work was in regards to programmatically reading Ink files within scripts for Unity, which is streamlined through the </span><span data-testid="content-text"><span>ink-Unity Integration</span></span><span data-testid="content-text"> package developed by the same company.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The package compiles Ink files into readable JSON files that, inside scripts, can be converted into Story objects. These Story objects store the current line, variables, and an incredibly handy, line specific type of variable called a tag which is indicated as “#tagName: tagValue”. Each tag is a part of an attribute of the Story that updates for each line. Now that you are more aware of Ink files and their capabilities, I can discuss the dialogue system which I developed for </span><span data-testid="content-text"><span>Rockin Racket</span></span><span data-testid="content-text">.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The dialogue system I developed was meant to be a fully independent piece that could be put into a scene, and work with no issue. To achieve this, I have a system of triggers and a manager, wherein the triggers have an attached ink file that, upon being triggered, sends its ink file to the manager object. The manager object deals with both the graphical display of the dialogue, and the programming backend. In order for players to see the dialogue, the UI consists of a main dialogue panel, where in the top left corner is a nametag, the middle of the panel is where lines of dialogue appear, the bottom is where dialogue choice buttons appear, and the center of the right-side is the continue dialogue button. Behind the main panel are two character sprites, a smaller sprite on the left indicates the player character, and a larger sprite across the whole right-side of the screen is the character being spoken to.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">To achieve a reactive and dynamic system we used a mixture of ink tags to update the nametag, update the emotions of the speaker, and the layout of the dialogue window. In order to use the ink tags in Unity, you must first process them from the Story object. Luckily, each tag is actually just a string of characters after a # symbol in Ink, and all tags present in a line can be retrieved through the currentTags attribute of the Story object as a list of strings. However, this structure does mean that you must first process tag values, by splitting them, before using them. To split a tag, you can just use the built in “split” String function in Unity, and store the split strings in a length 2 array. The first element at index 0 will be the key for the tag, and the second element at index 1 will be the value. Then, you can set up differing behaviors for different tag keys. After implementing tag processing, I worked with the narrative writer to ensure three tags were present, speaker, portrait, and layout.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The layout tag is obviously used to update the layout which is a simple call to a Unity Animator. Animators in Unity can be used for far more than just importing frame-by-frame animations, but one easy use they can have is to save certain sets of object positions, which is perfect for saving layouts. The other tags are more interesting.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The speaker tag is the name of the character speaking which, depending on the character, updates the nametag to the value given in the tag, and updates the background color of the name tag to match the character speaking, since each main character in </span><span data-testid="content-text"><span>Rockin’ Racket</span></span><span data-testid="content-text"> has a signature color that defines their palette.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The portrait tag is the most complex, but is still relatively straightforward. For starts, each line that changes the portrait tag has to have 2 of them, one for the player character sprite, and one for the other character sprite. However, since each tag is a string, unlike normal variables in programming languages, two different portrait tags will be processed. To determine which sprite Animator to use, the first word of the string is checked to see if it is “harvey”, the name of the player character. If it is, then the animator used is the one that updates the player character sprite, but if it is not, then the animator used is the non-player character sprite. Each animator has a list of recorded animations, and the tag values of tags with key “portrait” are names of the animations, and the manager tells the animator to play the tag value, essentially allowing Ink to tell Unity what to animate next.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The&nbsp; easiest piece is retrieving the next line of dialogue, which is a simple call of the “nextLine” method on the Story object. The return value is a string with that line of dialogue which you can simply update a TextMesh object to display the retrieved value. However, calling it also moves the Story along, meaning you need to handle tags whenever calling this method.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">To allow for player input, Story objects also have a currentChoices attribute, wherein you can determine if choices are available at a given line, and how many. By calling this method whenever progressing, you can check whether the line is a simple dialogue continuation, or if you need to show choice options. Implementing choice options is also quite simple, as each choice is set to an index corresponding to their position in the currentChoices list. Then, by setting each choice as its index, you can determine what choice the player makes and call the “chooseChoiceIndex” method on your Story object, using the index of the player choice as input. After it's a simple call of “nextLine” to progress the story to the right dialogue tree! Altogether, this system helps create an adaptable workflow, and opportunities for interesting UI elements!</span></p><p data-testid="content-paragraph"><span data-testid="content-text">If you would like to follow the development progress of </span><span data-testid="content-text"><span>Rockin Racket</span></span><span data-testid="content-text">, you can find the project’s socials below!</span></p><p data-testid="content-paragraph"><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://www.instagram.com/rockinracket/">Instagram</a></span><span data-testid="content-text">, </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://twitter.com/rockinracket">Twitter (X)</a></span><span data-testid="content-text">, </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://www.youtube.com/@RockinRacket">Youtube</a></span></p></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Designing a New Sub-Genre]]></title>
            <link>https://www.gamedeveloper.com/design/designing-a-new-sub-genre</link>
            <guid>https://www.resetera.com/threads/designing-a-new-sub-genre.1136343/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/design/designing-a-new-sub-genre<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><h2 data-testid="content-text" id="Introduction">Introduction</h2><p data-testid="content-paragraph"><span data-testid="content-text">For over a year, I've been the lead designer and producer for a small indie game called Go! Save the Queen! This is my first game, and along with a small team of other students at Indiana University Bloomington, we hope to release it in Spring 2024 as part of our senior capstone. Initially, this game was designed and pitched as a real-time strategy game in which you would escort different queens through levels and defend them from an army of insects seeking to stop the ants from finding a new queen; you can still watch the original pitch </span><span data-testid="content-text"><a target="_blank" href="https://www.facebook.com/watch/live/?ref=watch_permalink&amp;v=1290508828410061">here</a></span><span data-testid="content-text"> (1:52:10 – 2:10:30 specifically) if you’re curious.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">However, soon after this pitch, and with input from the judges, we decided to pivot towards a tower defense game. But tower defense games are usually static, not very reaction-heavy, and based on long or medium-term strategy; meanwhile, the DNA of Go! Save the Queen! It is built on short-term strategy, constant threats, no rest, quick reaction times, repeated attempts, and a constantly shifting level, so how would this work? In this blog, I will walk through my design process on Go! Save the Queen! In hopes that it can help others in a similar situation to the one I was in.</span></p><h2 data-testid="content-text" id="A look at Go! Save The Queen!">A look at Go! Save The Queen!</h2><p data-testid="content-paragraph"><span data-testid="content-text">&nbsp;Before going into specifics, let me go into more detail about Go! Save The Queen! And what we’re aiming for to help give you an idea of what is different. Go! Save the Queen! is what we are dubbing as an “Escort Tower Defense” game, where it is your job to draw lines of ants, which act as your towers, to defend your queen from the hordes of enemies coming in as they move throughout the level. The most significant change from traditional tower defense is how levels work. Unlike a typical tower defense game where enemies move from their spawn to the goal on a set path, Go! Save The Queen! Has the spawns and goal constantly switching from place to place. Not only this, but how the goal moves through the level continuously changes; it can speed up, stop, go to areas where regular enemies or towers can’t reach, and much more. Some other things about the game include aiming for a fair but challenging game and a lighthearted tone.</span></p><h2 data-testid="content-text" id="Inspirations">Inspirations</h2><p data-testid="content-paragraph"><span data-testid="content-text">One of the first steps for Go! Save the Queen! Was figuring out what other games had already done, V.S. what we would need to figure out on our own.</span></p><h2 data-testid="content-text" id="Plants V.S. Zombies &amp; Tower Defense">Plants V.S. Zombies &amp; Tower Defense</h2><p data-testid="content-paragraph"><span data-testid="content-text">In terms of DNA, we decided early on that Plants V.S. Zombies was the closest to Go! Save the Queen. Unlike most Tower Defense games, Plants V.S. Zombies is less strategy-based and more reaction-based than other tower defense games, even if it is still far off from our game, which is on a far extreme. P.V.Z doesn’t have upgrades like standard tower defense games; levels are only a few minutes long versus the much longer levels of a traditional tower defense game, and it has the same lighthearted tone we’re going for. It doesn’t have everything we’re going for, though; levels in P.V.Z. are super simple compared to the big levels of Go! Save The Queen! And the game is very easy in comparison (although P.V.Z 2 is very challenging). Despite the difference, we have been able to use many elements from Plants V.S. Zombies to help design our game. For example, the guidebook (W.I.P) we have, which details everything in the game, is heavily based on the Almanac from Plants V.S. Zombies, and the game's meta progression is almost the same, with the player getting new ants and seeing new enemies constantly.</span></p><h2 data-testid="content-text" id="Cuphead &amp; “Hard But Fair Gameplay”">Cuphead &amp; “Hard But Fair Gameplay”</h2><p data-testid="content-paragraph"><span data-testid="content-text">Another game we took inspiration from was Cuphead. Cuphead is very short, but it masks that with challenging but fair gameplay that will have you trying and trying over again. This is where the level length and main level design philosophy come from. Levels in our game are only about 3 minutes to help prevent players from getting stuck for too long; simultaneously, levels require the player to learn what to do and what not to do. Most levels will require the player to play repeatedly until they finish it. It is crucial to make sure players aren’t dying due to unfair reasons like bad enemy placement or unfair queen pathing but to stuff that can be easily remembered, learned, and dealt with the first time if they react correctly. Overall, this philosophy helps the game a lot since we are a small team, only have one designer, and making a level requires a lot more than your average tower defense game; it helps give the game more length.</span></p><h2 data-testid="content-text" id="Bullet Hells &amp; Enemy Spawning">Bullet Hells &amp; Enemy Spawning</h2><p data-testid="content-paragraph"><span data-testid="content-text">The last inspiration I wanted to talk about is Bullet Hells. As I said before, unlike traditional tower defense, enemies don’t come from one location but instead from around the level towards the queen. This is inspired by bullet hells, where things collapse in from around, and it’s your job to deal with them. Now, I will get more into designing enemy spawns a bit later, but overall, Bullet Hells give a system that works for enemy spawning,</span></p><h2 data-testid="content-text" id="Putting everything together">Putting everything together</h2><p data-testid="content-paragraph"><span data-testid="content-text">After the team figured out how the game would look with this new direction, it was time to assemble everything. In this section, I will go through what is unique to our game and the considerations I had to make the experience as best as possible.</span></p><h2 data-testid="content-text" id="Systems">Systems</h2><p data-testid="content-paragraph"><span data-testid="content-text">When it came to systems, luckily, only a little had to change from a traditional tower defense in terms of core systems; the idea of placing towers and having them attack automatically worked well. Meanwhile, the significant addition to enemies was cooldowns to their attacks, since once they got to the queen, they would attack it instead of getting to their destination and disappearing like a traditional tower defense game. They also needed to have more advanced movement AI to track the queen. Another of the most significant changes is what the towers and enemies focus on; while you have your standard stuff like primary attackers, explosive users, status effect givers, etc, this game has many enemies and towers focused on disruption compared to normal.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">In terms of ants, 4 of the 12 have ways to mess with enemies in some way, while 5 of 16 enemies have ways to disrupt the ants attacking them. The main reason for this is due to the level design. With how big the levels are, it is essential to make ants that allow the player to manipulate the enemies in beneficial ways. For example, some ants push enemies back, potentially into things that could kill them, like water, or some ants block paths and force enemies to go around. Meanwhile, enemies that disrupt ants were made to prevent boring strategies. For example, I brought up ants that block paths; if they had no way to be dealt with, then most enemies would be easy to deal with; just block all their paths. To deal with this, the termite enemy can eat through them, or the cricket enemy can lure them away (not pictured).</span></p><h2 data-testid="content-text" id="Levels">Levels</h2><p data-testid="content-paragraph"><span data-testid="content-text">The biggest hurdle to get over was how to make an incredible level; we spent around three months in early 2023 trying to figure this out. There are many things to keep in mind when designing a level for Go! Save The Queen! There are three main parts to creating a level: boxing it out, setting up the queen path, and setting up the enemy spawns.</span></p><h3 data-testid="content-text" id="Level Boxing">Level Boxing</h3><p data-testid="content-paragraph"><span data-testid="content-text">While this is the simplest of the three, it can be very time-consuming. You start from nothing, and it is your job to decide what areas of interest you will have in it, all while keeping in mind where enemies will spawn, how they will move through it, and how the queen will move through it. Because of this, it can be very time-consuming, even if it is just greyboxing.</span></p><h3 data-testid="content-text" id="Queen Pathing">Queen Pathing</h3><p data-testid="content-paragraph"><span data-testid="content-text">Unlike regular tower defense games, where pathing is a simple “stop the enemy before they get from their spawn to the goal,” our game’s pathing is based on an animal or an object; for this example, let’s use the Corgi Queen. Because the path is based on a corgi, it must be designed as if a corgi is moving through the level. This corgi isn’t smart; it’s just a corgi living and doing what it would do: playing, eating, smelling, exploring, etc. Because of this, pathing isn’t just setting up a bunch of waypoints. It’s also a story: what is the corgi doing at all these points? Why does the corgi go on such an odd path to the end instead of straight there? Does it make sense in the level? You also have to consider stuff like Does it speed up? Stop? Etc. Despite how hard it might sound, I find this the easiest and quickest part since you usually come up with the story during the grey boxing them.</span></p><h3 data-testid="content-text" id="Spawning Enemies">Spawning Enemies</h3><p data-testid="content-paragraph"><span data-testid="content-text">&nbsp;There are two main factors to consider when spawning enemies: the number of enemies coming in and the time to get to the queen.</span></p><div data-component="basic-list"><ol data-testid="basic-list-ordered"><li><div><p data-testid="content-paragraph"><span data-testid="content-text">The number of enemies is simple: the more you spawn, the more time you need to give the player to respond. In a standard tower defense game, this doesn’t matter since your defense constantly builds up, but in Go! Save the Queen! Your queen can move away from your defense, forcing you to build up somewhere else where you don’t already have something.</span></p></div></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">Time to get to the queen is exactly what it sounds like; how long does it take for the enemy to get to the queen from its spawn point?</span></p></div></li></ol></div><p data-testid="content-paragraph"><span data-testid="content-text">Seems simple, right? Those are the main factors; all the subfactors must also be considered.</span></p><div data-component="basic-list"><ol data-testid="basic-list-ordered"><li><div><p data-testid="content-paragraph"><span data-testid="content-text">Are units already in the area?</span></p></div></li></ol></div><div data-component="basic-list"><ol data-testid="basic-list-ordered"><li><div><p data-testid="content-paragraph"><span data-testid="content-text">What does the level around the queen look like?</span></p></div></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">What type of enemies are you spawning?</span></p></div></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">How far into the level is it?</span></p></div></li><li></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">Should the attack be concentrated or wide?</span></p></div></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">Is the player's attention divided?</span></p></div></li></ol></div><p data-testid="content-paragraph"><span data-testid="content-text">All these factors go into just one enemy spawn; multiply that by the 80 average enemy spawn locations (not counting duplicates), and you get the workload for setting up the spawns in 1 level.</span></p><h2 data-testid="content-text" id="Conclusion">Conclusion</h2><p data-testid="content-paragraph"><span data-testid="content-text">Designing a new sub-genre can be incredibly hard; it’s no easy task, but I hope that does not stop people from trying. I, for one, had, and still am having, a lot of fun making this game, and I think it’s incredibly rewarding. If I had to give one piece of advice for someone going into the unknown, I would say, “Borrow what has already been done and spend your time making the new idea you have as great as it can be.”</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Thank you to everyone who read all the way through. This ended up much longer than I expected.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">If you would like to, Go! Save the Queen! Does have some socials if you want to know more: </span><span data-testid="content-text"><a target="_blank" href="https://twitter.com/GoSaveQueen">Twitter/X</a></span><span data-testid="content-text"><a target="_blank" href="https://www.youtube.com/channel/UCCVwiJKQbsnVg90Cyek8OCQ">Youtube</a></span><span data-testid="content-text"> and so do I if you want to talk: </span><span data-testid="content-text"><a target="_blank" href="https://twitter.com/smaniac1">Twitter/X</a></span><span data-testid="content-text"><a target="_blank" href="https://www.gamedeveloper.com/cdn-cgi/l/email-protection#e6958b87888f8785d7d6d6a6818b878f8ac885898b">Email</a></span><span data-testid="content-text">.</span></p></div></div>]]></content:encoded>
        </item>
    </channel>
</rss>