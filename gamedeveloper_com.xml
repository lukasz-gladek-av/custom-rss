<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>maGaming RSS Feed - gamedeveloper_com</title>
        <link>https://lukasz-gladek-av.github.io/custom-rss/gamedeveloper_com.xml</link>
        <description>A cleaned-up version of the original gaming feed for gamedeveloper_com</description>
        <lastBuildDate>Fri, 22 Nov 2024 17:55:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[How wall running and high-speed movement works in Project: Haste]]></title>
            <link>https://www.gamedeveloper.com/programming/how-wall-running-and-high-speed-movement-works-in-project-haste</link>
            <guid>https://www.resetera.com/threads/how-wall-running-and-high-speed-movement-works-in-project-haste.1043082/</guid>
            <content:encoded><![CDATA[https://www.gamedeveloper.com/programming/how-wall-running-and-high-speed-movement-works-in-project-haste<br/><br/><div id="readability-page-1" class="page"><div data-module="content" data-testid="article-base-body-content"><p data-testid="content-paragraph"><span data-testid="content-text">Howdy! My name is Connor Roberts, the programmer for </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://www.youtube.com/watch?v=_xgcRzsQED8">Project: Haste</a></span><span data-testid="content-text">, an online first-person arena shooter made in Unity. Today I would like to run you through how I implemented the high-speed movement for our project.</span></p><p data-testid="content-paragraph"><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> is an arena shooter game where players chain together movement techniques to outmaneuver their opponents. Our main goal with this game was to give players ultimate control over their positioning and maneuverability. The movement system is the basis for the game, especially as the game expands from a student project at </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://vfs.edu/programs/game-design">Vancouver Film School</a></span><span data-testid="content-text"> to a </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://vfs.edu/news/2024/09/26/alumni-success-vfs-students-nominated-for-%E2%80%98project-haste%E2%80%99-at-the-16th-unity-awards">Unity Awards 2024 Nominee</a></span><span data-testid="content-text">, and finally into a full-scale live-ops release where this movement will be the bread and butter of the player experience.</span></p><h2 data-testid="content-text" id="It starts with the design">It starts with the design</h2><p data-testid="content-paragraph"><span data-testid="content-text">As a team, we knew immediately when starting pre-production for </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> that we wanted the basis of our game to be a satisfying movement system. I began prototyping based solely on intuition because I wanted to test movement out before we had a concrete design - this let us understand what we wanted before we sat down at the whiteboard.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">This ended up being one of our greatest strengths, as I had unknowingly created the foundational system for the game; it was complete with wall-running, slides, double jumps, and a dash.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">For some time we considered basing the game around grappling hooks or rocket jumping, but came to the conclusion that the dash ability solved those problems for us.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">I developed this movement to have a lot of tunability so the rest of the team could easily work with it. I also made sure to use scriptable objects and remote config to allow for the team’s designers Trex Hossain and Sergio Lisuardi to tune our movement while they ran hundreds of playtests for our movement as the project matured.</span></p><h2 data-testid="content-text" id="Inspiration">Inspiration</h2><p data-testid="content-paragraph"><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> had many core inspirations, such as Quake and Titanfall 2, but before we had fully studied these titles or even had the full concept for the game, the movement was largely complete - at least technically.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">It’s hard for me to personally say where I drew inspiration during the early movement prototyping, even to the end of production. Not to say I didn’t study similar games, but the movement system became so core to our project that there wasn’t much time to study movement in other games.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">With this in mind, I think it would be a good idea to move on to </span><span data-testid="content-text"><span>how</span></span><span data-testid="content-text"> the movement actually works, which is made up of our:</span><br></p><div data-component="basic-list"><ul data-testid="basic-list-unordered"><li></li><li><div><p data-testid="content-paragraph"><span data-testid="content-text">Camera and Screen Space Effects</span></p></div></li><li></li></ul></div><p data-testid="content-paragraph"><span data-testid="content-text">As </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> evolved, these layers made our movement go from good to addicting.</span></p><h2 data-testid="content-text" id="Custom physics">Custom physics</h2><p data-testid="content-paragraph"><span data-testid="content-text">At the core of our movement is my disdain for using built-in physics in game engines. I don’t know what it is, but I’d rather program it all so I can provide maximum tunability for the design team, or just for myself.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">To make the physics easier on myself, I used a state machine to divide every movement state’s physics into individual closed systems with input and output parameters. With each closed system created, the state machine allowed for the inputs and outputs of these systems to feed into each other to create a predictable, tuneable, and fluid movement system.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">For example, our wall run has an input of the player’s current speed and a gravity input. This speed is simply the value in meters per second, and the gravity is fed in as a tuned gravity specific to wall running. These are then used in conjunction with some collision-vector shenanigans to let you run along curved surfaces in </span><span data-testid="content-text"><span>Project: Haste.</span></span></p><p data-testid="content-paragraph"><span data-testid="content-text">This then outputs a velocity value to the player, which can later be used as an input for any other movement state.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Even though the main movement mechanics are our Wall Run, Slide, and Double Jump, we also had movement mechanics that were hidden from the player such as our slide jumping, our double jump’s forward boost, or our mental ability used for affordance at ledges. Each of these had its own closed physics systems which fed together to allow the player to traverse our levels with additive speed.</span></p><h2 data-testid="content-text" id="Camera and screen space effects">Camera and screen space effects</h2><p data-testid="content-paragraph"><span data-testid="content-text">Now with all of our movement pieces connected together, we needed to make the player </span><span data-testid="content-text"><span>feel</span></span><span data-testid="content-text"> fast. We used a bunch of tricks here to make the player feel in tune with the movement of the player, such as FOV changes mapped to the change in velocity of the player, dash lines that scale based on player speed, and changing color depending on the current movement ability. We basically wanted to make the game feel satisfying in every movement that you do, really scratching the fast-paced itch all of our brains were craving.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">In addition to these tricks, we also rotate the camera depending on the player’s turn speed, which made us feel really in tune with the way we were moving. We also do this with the wall run -and all of our jumps for that matter- to tilt the player away from the surface they are on, which really sold those movement abilities for us and made it feel like you were impacting the surfaces of the game world.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Finally, we had some other screen space effects. </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> is very stylized, so we wanted to add some feedback to our movement in a more stylized fashion. I created a halftone shader that we used around our project with various masks to create effects like screen transitions, and we realized we could use custom-designed masks to make different halftone shapes. We ended up using this on the edges of our screen to create feedback directly for wall running, sliding, double jumping, and even when you are using boost pads and jump pads. Matching the colors with the dash lines made everything feel very cohesive and fast.</span><br></p><h2 data-testid="content-text" id="Animation feedback">Animation feedback</h2><p data-testid="content-paragraph"><span data-testid="content-text">I can’t write this section without mentioning our team’s artists Chevi Hernandez and Jose Andres Lopez. Chevi really worked wonders on all of our character animations, along with weapon models and animations done by Jose, which became a key indicator for our players in order to maintain understanding during the high-octane gameplay found while players duke it out in the Haste League.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">We ultimately had many layers of animation present, including a unique animation for each directional input for each movement ability- this was used to ensure players fully understand their movements as they make them, and gives a point of reference for what a movement action is going to do to your direction in gameplay.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">Mixing these animations with SFX and music from our composer and SFX designer Declan Johnston means that players have all the tools in their tool belt in order to fully understand what is happening with their own character, as well as their surroundings in a match.</span></p><h2 data-testid="content-text" id="Final takeaway">Final takeaway</h2><p data-testid="content-paragraph"><span data-testid="content-text">I’d like to highlight how making a game within a short time frame really does take a village. </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> was only in development for four months, which looking back is incredibly short. It is thanks to my amazing team that I am fortunate enough to even be writing about our project, let alone programming away and getting it prepared for a full scale release. I feel truly lucky. Our process was very interesting; by the book in some ways, and very much not for others. The communication and cohesive vision of this team allowed for something pivotal to our gameplay, our movement, to be proved out and iterated on from week one of pre-production, needing few revisions as the game matured. Being the programmer for the team allowed me to focus in and get a mind map of how the game was going to function in its entirety, and that really started with that one clear goal of having precise and responsive fast-paced movement. I have loved watching that mind map transform into a game that I can see with the help of my team, it truly has been the most rewarding experience.</span></p><p data-testid="content-paragraph"><span data-testid="content-text">The </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text"> team and myself really hope you have enjoyed reading this! If you would like more information about our upcoming release of </span><span data-testid="content-text"><span>Haste</span></span><span data-testid="content-text"> or the development of </span><span data-testid="content-text"><span>Project: Haste</span></span><span data-testid="content-text">, feel free to contact us at </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://www.gamedeveloper.com/cdn-cgi/l/email-protection#0c646d7f78697f6d637c6d7960634c6b616d6560226f6361"><span data-cfemail="caa2abb9beafb9aba5baabbfa6a58aada7aba3a6e4a9a5a7">[email&nbsp;protected]</span></a></span></p><p data-testid="content-paragraph"><span data-testid="content-text">Or if you are interested in </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://vfs.edu/programs/game-design">Vancouver Film School’s Game Design program</a></span><span data-testid="content-text"> where this all started, </span><span data-testid="content-text"><a rel="nofollow" target="_blank" href="https://vfs.edu/programs/game-design">click here.</a></span></p></div></div>]]></content:encoded>
        </item>
    </channel>
</rss>